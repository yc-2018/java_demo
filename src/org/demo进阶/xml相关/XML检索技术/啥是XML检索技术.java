//仰晨study 创建时间2023/2/15 2:19 星期三
package org.demo进阶.xml相关.XML检索技术;

public interface 啥是XML检索技术 {/*
如果需要从XML文件中检索需要的某个信息（如name）怎么解决？
    ·Dom4j需要进行文件的全部解析，然后再寻找数据。
    ·Xpath技术更加适合做信息检索。

XPath介绍
    ·XPath在解析XML文档方面提供了一独树一帜的路径思想，更加优雅，高效
    ·XPath使用路径表达式来定位XML文档中的元素节点或属性节点。

使用Xpath检索出XML文件----------------------------
    需求：使用Dom4J把一个XML文件的数据进行解析
    分析：
        ·导入jar包(dom4j和jaxen-1.1.2.jar)，Xpath技术依赖Dom4j技术
        ·通过dom4j的SAXReader获取Document对象
        ·利用XPath提供的API,结合XPath的语法完成选取XML文档元素节点进行解析操作。
        ·Document中与Xpath相关的API如下：
                 方法名                      	说明
        Node selectSingleNode("表达式") 	    获取符合表达式的唯一元素
        List<Node> selectNodes("表达式") 	获取符合表达式的元素集合

Xpath的四大检索方案*********************************************************
    ·绝对路径
    ·相对路径
    ·全文检索
    ·属性查找

XPath：绝对路径···············
    采用绝对路径获取从根节点开始逐层的查找/contactList/contact/name节点列表并打印信息
        方法名	                        说明
/根元素/子元素/孙元素	        从根元素开始，一级一级向下查找，不能跨级   ***

XPath：相对路径···············
    ·先得到根节点contactList
    ·再采用相对路径获取下一级contact 节点的name子节点并打印信息
     方法名	                    说明
./子元素/孙元素	    从当前元素开始，一级一级向下查找，不能跨级   ***

XPath：全文搜索···············
    ·直接全文搜索所有的name元素并打印
    方法名	                    说明
//contact	            找contact元素，无论元素在哪里
//contact/name	        找contact，无论在哪一级，但name一定是contact的子节点
//contact//name	        contact无论在哪一种，name只要是contact的子孙元素都可以找到

XPath：属性查找···············
在全文中搜索属性，或者带属性的元素
    方法名                	      说明
//@属性名	            查找属性对象，无论是哪个元素，只要有这个属性即可。
//元素[@属性名]	        查找元素对象，全文搜索指定元素名和属性名。
//元素//[@属性名=‘值’]	查找元素对象，全文搜索指定元素名和属性名，并且属性值相等。
*************************************************************************/

}
/*
*关于Xpath的小结:
*1，Xpath底层依赖于dom4j。在刚开始导包的时候一定要把dom4j的jar一起导入
*2，有两个检索的方法:
    selectNodes (“路径”) : 查询所有selectSingleNode(“路径”) : 查询单个的，如果结果有多个，默认返回第一个
*
*3，四种检索方式
* /: 单级路径
* //:多级路径
* @属性
* 绝对路径:一定是从根节点开始
* 相对路径:从现在的自己节点开始的。
    用根节点调用selectNodes，那么此时就是相对于根节点而言
    用name节点调用selectNodes，你那么此时就是相当于name标签而言。
*全文检索:只要xml文件中存在就可以找到
    //name在整个xml中找name这个标签
    扩展用法:
    //person/name : 先找person，再找person的子标签name
    //person//name: 先找person，再找person的子标签name，但是此时name可以是孙标签
*带属性的查询:
    查属性: //@属性名 在全文中找指定的属性
    查带有指定属性的标签: //标签名[@属性名]
    查带有指定属性值的标签: //标签名[@属性名='值']
* */