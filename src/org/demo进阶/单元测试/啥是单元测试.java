//仰晨study 创建时间2023/2/15 14:35 星期三
package org.demo进阶.单元测试;

public interface 啥是单元测试 {/*
单元测试
    ·测试方法的正确性的，可以方便快捷的直接运行
    ·单元测试就是针对最小的功能单元编写测试代码，Java程序最小的功能单元是方法，
     因此，单元测试就是针对lava方法的测试，进而检查方法的正确性。

目前测试方法是怎么进行的，存在什么问题
    ·只有一个main方法，如果一个方法的测试失败了，其他方法测试会受到影响。
    ·需要程序员自己去观察测试是否成功。


Junit单元测试框架
    ·JUnit是使用)ava语言实现的单元测试框架，它是开源的，Java开发者都应当学习并使用JUnit编写单元测试
    ·此外，几乎所有的IDE工具都集成了JUnit，这样我们就可以直接在IDE中编写并运行JUnit测试，JUnit目前最新版本是5。(但用的最多的还是4

JUnit优点
    ·JUnit可以灵活的选择执行哪些测试方法，可以一键执行全部测试方法
    ·单元测试中的某个方法测试失败了，不会影响其他测试方法的测试
    ·JUnit可以生测试报告，如果测试良好则是绿色;如果测试失败，则是红色

——————————————————————————————————————————————————————————————————————
单元测试快速入门
    需求:使用单元测试进行业务方法预期结果、正确性测试的快速入门
    分析:
        1、将Unit的jar包导入到项目中
            ·IDEA通常整合好了Junit框架，一般不需要导入。
            ·如果IDEA没有整合好，需要自己手工导入如下2个JUnit的iar包到模块
                 hamcrest-core-1.3.jar    junit-4.12.jar
        2、编写测试方法：该测试方法必须是公共的无参数无返回值的非静态方法*****************
        3、在测试方法上使用@Test注解:标注该方法是一个测试方法
        4、在测试方法中完成被测试方法的预期正确性测试。
        5、选中测试方法、选择“JUnit运行”，如果测试良好则是绿色;如果测试失败，则是红色


Junit常用注解(unit 4.xxxx版本)
注解                                  说明
@Test               测试方法
@Before             用来修饰实例方法，该方法会在每一个测试方法执行之前执行一次。
@After              用来修饰实例方法，该方法会在每一个测试方法执行之后执行一次
@BeforeClass        用来静态修饰方法，该方法会在所有测试方法之前只执行一次
@AfterClass         用来静态修饰方法，该方法会在所有测试方法之后只执行一次
        (下面2种比较少用，3上面3种比较常用）
开始执行的方法:初始化资源
Test
执行完之后的方法:释放资源

















*/

}
