package org.demo进阶.IO流;

public interface 啥IO流 {//存储和读取数据的解决方案
                        //用于读写文件中的数据(可以读写文件，或网络中的数据...)
    //问:io流中，谁在读，谁在写? 以谁为参照物看读写的方向呢?
    //答：程序

//原则:
//IO: 随用随创建  什么时候不用什么时候关闭

    /*IO流的分类
         ———————————— I O 流 体 系 ——————————————————
                    /             \
              字节流                字符流
             /     \                 /  \
 InputStream    OutputStream    Reader   Writer
  字节输入流         字节输出流   字符输入流   字符输出流
        ————————————————↑抽象类—————↓实现类之基本流———————————
InputStream————→FileInputStream------操作本地文件的字节输入流   就在父类前加个File
OutputStream———→FileOutputStream-----操作本地文件的字节输出流
Reader—————————→FileReader-----------操作木地文件的字符输入流   File:作用    Reader:他爹
Writer—————————→FileWriter-----------操作本地文件的字符输出流

——————————————————————————————↓实现类之缓冲流—————————————————————————————————————————
InputStream————→BufferedInputStream------字节缓冲输入流   就在父类前加个Buffered
OutputStream———→BufferedOutputStream-----字节缓冲输出流
Reader—————————→BufferedReader-----------字符缓冲输入流   Buffered:作用    Reader:他爹
Writer—————————→BufferedWriter-----------字符缓冲输出流   对于字符流提升不明显，对于字符缓冲流而言关键点是两个特有的方法
提高效率的原理-在内存创建8192的缓冲区 字节流默认是8k  字符流默认是16k（创建char类型的数组8192   char类型占2个字节）
字符缓冲流两个特有的方法是
字符缓冲输入流BufferedReader: readLine ()
字符缓冲输出流BufferedWriter: newLine ()

—————————————————————————————↓实现类之高级流——转换流———————————————————————————————————属于字符流
Reader—————————→InputStreamReader-----------转换输入流
Writer—————————→OutputStreamWriter----------转换输出流
作用1: 指定字符集读写（JDK11时淘汰了）
作用2:字节流想要使用字符流中的方法

—————————————————————————————↓实现类之高级流——序列化流——————————————————————————————————属于字节流
InputStream————→ObjectInputStream-----------反序列化流
OutputStream———→ObjectOutputStream----------序列化流

—————————————————————————————↓实现类之高级流——打印流——————————————————————————————————属于输出流
OutputStream———→PrintStream-----------------字节打印流
Writer—————————→PrintWriter-----------------字符打印流
特点1:打印流只操作文件目的地，不操作数据源
特点2:特有的写出方法可以实现，数据原样写出
        例如:打印: 97文件中:97
            打印: true文件中: true
特点3:特有的写出方法，可以实现自动刷新，自动换行
     打印一次数据 =写出 +换行+刷新

—————————————————————————————↓实现类之高级流——压缩流——————————————————————————————————属于字节流
InputStream————→ZipInputStream-----------解压缩流
OutputStream———→ZipOutputStream----------压缩流

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        |—————————————流的方向——————————————————    |   ————————————操作文件类型——————————————————|
        |              IO流                        |                  IO流                      |
        |             /    \                       |                 /    \                    |
        |          输入流  输出流                    |              字节流  字符流                 |
        |           读取    写入                    |               |        |                  |
        |                                          |       所有类型的文件   纯文本文件             |
        |——————————————————————————————————————————————————————————————————————————————————————|
总结
    1.什么是I0流?
        存储和读取数据的解决方案
        I:input O: output
        流:像水流一样传输数据

    2.I0流的作用?
        用于读写数据 (本地文件，网络)

    3.IO流按照流向可以分类哪两种流?
        输出流: 程序→文件
        输入流: 文件→程序

    4.IO流按照操作文件的类型可以分类哪两种流?
        字节流:可以操作所有类型的文件
        字符流:只能操作纯文本文件

    5.什么是纯文本文件?
        用windows系统自带的记事本打开并且能读懂的文件
        txt文件，md文件，xml文件，lrc文件等
*/
}
